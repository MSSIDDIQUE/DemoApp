// Generated by Dagger (https://dagger.dev).
package com.baymax.demoapp.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import retrofit2.converter.gson.GsonConverterFactory;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideConvertorFactoryFactory implements Factory<GsonConverterFactory> {
  private final AppModule module;

  public AppModule_ProvideConvertorFactoryFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public GsonConverterFactory get() {
    return provideConvertorFactory(module);
  }

  public static AppModule_ProvideConvertorFactoryFactory create(AppModule module) {
    return new AppModule_ProvideConvertorFactoryFactory(module);
  }

  public static GsonConverterFactory provideConvertorFactory(AppModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideConvertorFactory());
  }
}
