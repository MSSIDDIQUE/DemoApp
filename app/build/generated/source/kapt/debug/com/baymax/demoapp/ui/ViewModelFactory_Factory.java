// Generated by Dagger (https://dagger.dev).
package com.baymax.demoapp.ui;

import androidx.lifecycle.ViewModel;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import java.util.Map;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ViewModelFactory_Factory implements Factory<ViewModelFactory> {
  private final Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> viewModelProviderMapProvider;

  public ViewModelFactory_Factory(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> viewModelProviderMapProvider) {
    this.viewModelProviderMapProvider = viewModelProviderMapProvider;
  }

  @Override
  public ViewModelFactory get() {
    return newInstance(viewModelProviderMapProvider.get());
  }

  public static ViewModelFactory_Factory create(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> viewModelProviderMapProvider) {
    return new ViewModelFactory_Factory(viewModelProviderMapProvider);
  }

  public static ViewModelFactory newInstance(
      Map<Class<? extends ViewModel>, Provider<ViewModel>> viewModelProviderMap) {
    return new ViewModelFactory(viewModelProviderMap);
  }
}
